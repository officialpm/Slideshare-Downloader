{"version":3,"sources":["download.svg","components/ActivityIndicator/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ActivityIndicator","className","require","App","useState","url","setUrl","valid","setValid","invalid","setInValid","loading","setLoading","disabled","setDisabled","error","setError","alertTheme","setAlertTheme","handleChange","useCallback","event","target","value","name","test","validateURL","handleSubmit","fetch","method","then","response","status","blob","file","a","document","createElement","href","URL","createObjectURL","setAttribute","split","click","remove","setTimeout","catch","reason","console","log","finally","style","position","height","width","params","particles","color","line_linked","number","size","id","src","Download","alt","open","theme","seamless","type","class","autoFocus","autoComplete","placeholder","onChange","pill","onClick","window","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9aa54cb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.2b98972b.svg\";","import React from \"react\";\n\nimport \"./index.css\";\n\nconst ActivityIndicator = () => (\n  <div className=\"ActivityIndicator\">\n    <div className=\"dots\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  </div>\n);\n\nexport default ActivityIndicator;\n","import React, { useState, useCallback } from \"react\";\nimport Particles from 'react-particles-js';\nimport {\n  Alert,\n  Container,\n  Card,\n  CardBody,\n  CardTitle,\n  Collapse,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  FormInput,\n  Button,\n  CardFooter,\n} from \"shards-react\";\nimport Download from './download.svg';\nimport ActivityIndicator from \"./components/ActivityIndicator\";\nimport \"./App.css\";\n\nvar FileSaver = require('file-saver');\nfunction validateURL(url) {\n  var re = /^http(s)?:\\/\\/www.slideshare.net\\//ig;\n  return re.test(url);\n}\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n  const [valid, setValid] = useState(false);\n  const [invalid, setInValid] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [error, setError] = useState(false);\n  const [alertTheme, setAlertTheme] = useState(\"danger\");\n\n  const handleChange = useCallback((event) => {\n    const { name, value } = event.target;\n    setUrl(value)\n\n\n    if (validateURL(value)) {\n      setValid(true)\n      setInValid(false)\n      setDisabled(false)\n    }\n    else {\n      setInValid(true)\n      setValid(false)\n      setDisabled(true)\n\n    }\n  }, []);\nconst NewTab = () => { \n  window.open( \n    \"https://github.com/officialpm/Slideshare-Downloader\", \"_blank\"); \n} \n  const handleSubmit = useCallback(() => {\n    if (!url) {\n      setError(\"No URL entered!\");\n      return false;\n    }\n    setLoading(true);\n    fetch(\"https://parthmaniar2.herokuapp.com/slideshare?url=\" + url, {\n      method: \"GET\"\n    })\n      .then((response) => {\n        if (response.status == 200) {\n          return response.blob().then((file) => {\n            var a = document.createElement(\"a\");\n            a.href = URL.createObjectURL(file);\n            a.setAttribute(\"download\", url.split(\"/\")[4]);\n            a.click();\n            a.remove();\n            setAlertTheme(\"success\")\n            setError(\"Your slides are downloaded! 😍\");\n\n            setUrl(\"\");\n\n            setTimeout(() => {\n              setError(false);\n            }, 5000);\n          })\n        }\n\n\n        else {\n          setAlertTheme(\"danger\")\n          setError(\"😕  Invalid URL ! Example - https://www.slideshare.net/AmazonWebServices/track-6-session-6-aws-ai\");\n          setInValid(true)\n          setValid(false)\n          setDisabled(true)\n          setTimeout(() => {\n            setError(false);\n          }, 5000);\n        }\n      })\n      .catch((reason) => {\n        console.log(reason);\n        setError(\"Some server error occured. Please try again later.\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [url]);\n\n  return (\n    <>\n      <Particles\n        style={{ position: \"absolute\", 'z-index': '-1' }}\n        height=\"95%\"\n        width=\"95%\"\n        params={{\n          particles: {\n            color: {\n              value: \"#000000\"\n            },\n            line_linked: {\n              color: {\n                value: \"#000000\"\n              }\n            },\n            number: {\n              value: 30\n            },\n            size: {\n              value: 2\n            }\n          }\n        }}\n      />\n      <Container>\n\n        <h1 >SlideShare Downloader 🚀</h1>\n\n        <div id=\"urlCard\">\n\n          <img id=\"image\" src={Download} alt=\"Slideshare Downloader\" />\n          <Collapse open={!!error && !loading}>\n            <Alert theme={alertTheme}>{error}</Alert>\n          </Collapse>\n\n          <InputGroup seamless>\n            <InputGroupAddon type=\"prepend\">\n              <InputGroupText>\n                <i class=\"fa fa-link mr-2\"></i>\n              </InputGroupText>\n            </InputGroupAddon>\n            <FormInput\n              theme=\"dark\"\n              valid={valid}\n              invalid={invalid}\n              autoFocus\n              size=\"lg\"\n              autoComplete=\"off\"\n              placeholder=\"Slideshare URL\"\n              onChange={handleChange}\n              value={url}\n              name=\"title\"\n              disabled={loading}\n            />\n          </InputGroup>\n          <Button size=\"lg\" pill theme=\"success\" onClick={handleSubmit} disabled={loading || disabled}>\n            <i class=\"fa fa-download mr-2\"></i>\n            {loading ? <ActivityIndicator /> : \"Download\"}\n          </Button>\n\n\n        </div>\n\n        <main>\n          <Card >\n            <CardBody>\n              <CardTitle>Instruction To Use</CardTitle>\n              <p >\n\n                <br />\n\n                <b>1.</b> Go to <a target=\"blank\" href=\"https://www.slideshare.net\">\n                  Slideshare.net\n                </a>  <br />\n                <b>2.</b> 🔍 Search for slides and copy its link.<br />\n                <b>3.</b> Paste the url in the box above and click on download. ✨<br />\n              </p>\n              <p id=\"example\">Example -<a target=\"blank\" href=\"https://www.slideshare.net/AmazonWebServices/track-6-session-6-aws-ai\"> https://www.slideshare.net/AmazonWebServices/track-6-session-6-aws-ai</a></p>\n            </CardBody>\n            <CardFooter id=\"footer\">\n\n              <b>\n                Developed By: <br />\n                <a target=\"blank\" href=\"https://www.linkedin.com/in/parthdmaniar/\">\n                  Parth Maniar\n                </a>  <br />\n\n                <a target=\"blank\" href=\"https://www.github.com/officialpm\">\n                  <i class=\"fab fa-github mr-2\"></i>\n                </a>\n                <a target=\"blank\" href=\"https://www.linkedin.com/in/parthdmaniar/\">\n                  <i class=\"fab fa-linkedin mr-2\"></i>\n                </a>\n              </b>\n\n            </CardFooter>\n          </Card>\n          <Card>\n            <CardBody>\n              <CardTitle>About</CardTitle>\n              <p >\n                <div id=\"header\">\n                  <img id=\"downloads\" src={\"https://parthmaniar2.herokuapp.com/slideshare/downloadcountBadge?color=BLUE&text=Total%20Downloads\"} alt=\"Slideshare Downloader\" />\n                  <Button size=\"sm\" pill theme=\"warning\" onClick={NewTab}>\n                    <i class=\"fa fa-star mr-2\"></i>\n                    <b>{\"Star me on GitHub\"}</b>\n                  </Button>\n                </div>\n                <br />\n\n                <b>SlideShare</b> is great for presentations and last minute assignments but unfortunately\n              can't download slides? Don't worry, here is the tool that will help you download slides in no time.\n              Just a bit of knowledge of python web scraping and selenium is what I used to build this tool.\n            </p>\n            </CardBody>\n            <CardFooter id=\"footer\">\n\n              <b>\n                Developed By: <br />\n                <a target=\"blank\" href=\"https://www.linkedin.com/in/parthdmaniar/\">\n                  Parth Maniar\n                </a>  <br />\n\n                <a target=\"blank\" href=\"https://www.github.com/officialpm\">\n                  <i class=\"fab fa-github mr-2\"></i>\n                </a>\n                <a target=\"blank\" href=\"https://www.linkedin.com/in/parthdmaniar/\">\n                  <i class=\"fab fa-linkedin mr-2\"></i>\n                </a>\n              </b>\n\n            </CardFooter>\n          </Card>\n        </main>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}